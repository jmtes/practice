CHAPTER 2: VALUES

<--- ARRAYS --->
- Using DELETE On an array value will remove that slot from the array, but it does not update the length property, so be careful!
  - While logging the array at the empty slot will output "undefined", it will not behave the same as if it had been explicitly set to undefined.
  - See Example A in ../examples/arrays.js
- Arrays are numerically indexed, but because they are also objects, they can have STRING keys/properties added to them.
  - These do not count toward the length of the array.
  - Generally, just don't add string properties to arrays.
  - If you find yourself wanting to do so, you're probably better off using a plain object.
  - See Example B in ../examples/arrays.js

<--- ARRAY-LIKES --->
- Sometimes you will need to convert an array-like value (a numerically indexed collection of values) into a true array.
  - This is so you can use utilities like indexOf(...), forEach(...), etc.
- Various DOM query operations return lists of DOM elements that are not true arrays but are array-like enough for conversion.
- Functions can also expose the array-like arguments object to access the arguments as a list.
  - arguments has been deprecated as of ES6 though.
- Ways to convert an array-like value to a true array:
  1. With the slice(...) utility.
    - See Example A in ../examples/array_likes.js
  2. With ES6's Array.from(...) utility.
    - See Example B in ../examples.array_likes.js


