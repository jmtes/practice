CHAPTER 5: PROTOTYPES

<--- [[PROTOTYPE]] --->
- Objects in JS have an internal property [[Prototype]].
  - It is simply a reference to another object.
  - Almost all objects are given a non-null value for this property at the time of their creation.
  - It is possible for an object to have an empty [[Prototype]] linkage, but it's not common.
- All of the attempts to emulate class-copy behavior in Chapter 4, labeled as mixins, completely disregard the [[Prototype]] chain mechanism.
- See ../examples/prototype.js

<--- OBJECT.PROTOTYPE --->
- The top end of every normal [[Prototype]] chain is the built-in Object.prototype.
  - This object includes common utilities used all over JS because all normal objects descend from it.
  - These utilities include toString(), valueOf(), hasOwnProperty(), isPrototypeOf(), etc.

<--- SETTING AND SHADOWING PROPERTIES --->
- Setting properties on an object is more nuanced than getting them.
- See ../examples/setting_shadowing_properties.js
